# LeetCode Problem
# Given an integer array 'height' of length 'n',
# there are 'n' vertical lines drawn such that the two endpoints
# of the i^th line are (i,0) and (i, height[i]).
# Find two lines together with the x-axis form a container,
# such that the container contains the most water.
# Return the maximum amount of water a container can store.
from typing import List

# class Solution:
height = [1, 8, 6, 2, 5, 4, 8, 3, 7]


def maxArea(self, height: List[int]) -> int:
    left, right, answer = 0, len(height) - 1, 0
    while left <= right:
        area = min(height[right], height[left]) * (right - left)
        answer = max(answer, area)
        if height[right] > height[left]:
            left += 1
        else:
            right -= 1
        print(answer)


maxArea(self=height, height = [1, 8, 6, 2, 5, 4, 8, 3, 7])
